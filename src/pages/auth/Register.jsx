import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { toast } from 'react-toastify';
import { registerUser } from '../../api';
import { WhoWeAre2 } from '../../assets/img';

const Register = () => {
    // State to manage form data
    const [formData, setFormData] = useState({
        name: '',
        email: '',
        phone_number: '',
        password: '',
        confirmPassword: '',
        role: 1, // Role is set to 1 as per requirements
    });

    // State to track if the email has been manually edited
    const [isEmailManuallyEdited, setIsEmailManuallyEdited] = useState(false);

    // State to manage loading state during form submission
    const [loading, setLoading] = useState(false);

    const navigate = useNavigate();

    // Function to generate email from name
    const generateEmailFromName = (name) => {
        if (!name) return '';
        const domain = 'example.com'; // Replace with your organization's domain
        const email = name
            .trim()
            .toLowerCase()
            .replace(/[^a-zA-Z\s]/g, '') // Remove non-alphabetic characters
            .split(/\s+/)
            .join('.');
        return `${email}@${domain}`;
    };

    // Handle input changes for all form fields
    const handleInputChange = (e) => {
        const { name, value, type, checked } = e.target;

        // If the email field is being edited manually, set the flag
        if (name === 'email') {
            const autoGeneratedEmail = generateEmailFromName(formData.name);
            if (value !== autoGeneratedEmail) {
                setIsEmailManuallyEdited(true);
            } else {
                setIsEmailManuallyEdited(false);
            }
        }

        setFormData((prevData) => ({
            ...prevData,
            [name]: type === 'checkbox' ? checked : value,
        }));
    };

    // Auto-generate email when the name changes, unless manually edited
    useEffect(() => {
        if (!isEmailManuallyEdited) {
            const autoGeneratedEmail = generateEmailFromName(formData.name);
            setFormData((prevData) => ({
                ...prevData,
                email: autoGeneratedEmail,
            }));
        }
    }, [formData.name, isEmailManuallyEdited]);

    // Handle form submission
    const handleSubmit = async (e) => {
        e.preventDefault();

        // Validate that password and confirmPassword match
        if (formData.password !== formData.confirmPassword) {
            toast.error('Passwords do not match.');
            return;
        }

        setLoading(true);

        // Prepare data for API submission
        const submissionData = {
            name: formData.name,
            email: formData.email,
            phone_number: formData.phone_number,
            password: formData.password,
            role: formData.role,
        };

        try {
            await registerUser(submissionData);
            toast.success('Registration successful!');
            navigate('/login'); // Redirect to login page after successful registration
        } catch (error) {
            console.error('Registration Error:', error);
            const errorMessages = error.detail || 'An error occurred during registration.';
            toast.error(errorMessages);
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="main-content page-login ">
            <section className="section-page-login login-wrap tf-spacing-4">
                <div className="tf-container">
                    <div className="row">
                        <div className="col-lg-6">
                            <div className="img-left wow fadeInLeft" data-wow-delay="0s">
                                <img className=" ls-is-cached lazyloaded" data-src={WhoWeAre2} src={WhoWeAre2} alt="" />
                                <div className="blockquite wow fadeInLeft" data-wow-delay="0.1s">
                                    <p>
                                        Don't deliver a product <br /> Deliver an experience!
                                    </p>
                                    <p className="author">B. Jeff</p>
                                    <p className="sub-author">Founder &amp; CEO</p>
                                </div>
                            </div>
                        </div>
                        <div className="col-lg-6">
                            <div className="content-right ">
                                <h2 className="login-title fw-7 wow fadeInUp" data-wow-delay="0s">
                                    Create A New Account
                                </h2>
                                <div className="register">
                                    <p className="fw-5 fs-15 wow fadeInUp" data-wow-delay="0s">
                                        Already have an account?
                                    </p>
                                    <a href="/login" className="fw-5 fs-15 wow fadeInUp" data-wow-delay="0s">
                                        Login
                                    </a>
                                </div>
                                <form className="form-login" onSubmit={handleSubmit}>
                                    <div className="cols">
                                        <fieldset className="tf-field field-username wow fadeInUp" data-wow-delay="0s">
                                            <input
                                                className="tf-input style-1"
                                                type="text"
                                                name="name"
                                                required
                                                value={formData.name}
                                                onChange={handleInputChange}
                                            />
                                            <label className="tf-field-label fs-15" htmlFor="field1">Name</label>
                                        </fieldset>
                                    </div>
                                    <div className='d-flex'>
                                        <div className="cols px-2">
                                            <fieldset className="tf-field field-username wow fadeInUp" data-wow-delay="0s">
                                                <input
                                                    className="tf-input style-1"
                                                    type="number"
                                                    name="phone_number"
                                                    required
                                                    value={formData.phone_number}
                                                    onChange={handleInputChange}
                                                />
                                                <label className="tf-field-label fs-15" htmlFor="field1">Phone Number</label>
                                            </fieldset>
                                        </div>
                                        <div className="cols px-2">
                                            <fieldset className="tf-field field-username wow fadeInUp" data-wow-delay="0s">
                                                <input
                                                    className="tf-input style-1"
                                                    type="email"
                                                    name="email"
                                                    required
                                                    value={formData.email}
                                                    onChange={handleInputChange}
                                                />
                                                <label className="tf-field-label fs-15" htmlFor="field1">Email Address</label>
                                            </fieldset>
                                        </div>
                                    </div>
                                    <div className='d-flex'>
                                        <div className="cols px-2">
                                            <fieldset className="tf-field field-pass wow fadeInUp" data-wow-delay="0s">
                                                <input
                                                    className="tf-input style-1"
                                                    type="password"
                                                    name="password"
                                                    required
                                                    value={formData.password}
                                                    onChange={handleInputChange}
                                                />
                                                <label className="tf-field-label fs-15" htmlFor="field2">Password</label>
                                            </fieldset>
                                        </div>
                                        <div className="cols px-2">
                                            <fieldset className="tf-field field-pass wow fadeInUp" data-wow-delay="0s">
                                                <input
                                                    className="tf-input style-1"
                                                    type="password"
                                                    name="confirmPassword"
                                                    required
                                                    value={formData.confirmPassword}
                                                    onChange={handleInputChange}
                                                />
                                                <label className="tf-field-label fs-15" htmlFor="field2">Confirm Password</label>
                                            </fieldset>
                                        </div>
                                    </div>

                                    <button
                                        className="button-submit tf-btn w-100 wow fadeInUp mt-5"
                                        data-wow-delay="0s"
                                        type="submit"
                                        disabled={loading}
                                    >
                                        {loading ? 'Registering...' : 'Sign Up'}
                                        <i className="icon-arrow-top-right"></i>
                                    </button>
                                </form>
                                <p className="fs-15 wow fadeInUp" data-wow-delay="0s">OR</p>
                                <ul className="login-social">
                                    <li className="login-social-icon">
                                        <a href="#" className="tf-btn wow fadeInUp" data-wow-delay="0s">
                                            <i className="flaticon-facebook-1"></i>
                                            Facebook
                                        </a>
                                    </li>
                                    <li className="login-social-icon">
                                        <a href="#" className="tf-btn wow fadeInUp" data-wow-delay="0.1s">
                                            <i className="icon-google"></i>
                                            Google
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    );
};

export default Register;